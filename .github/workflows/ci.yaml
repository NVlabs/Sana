name: ci
on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests-bash'
        required: false
        type: boolean
        default: false
  pull_request:
    types: [labeled, unlabeled]
  push:
    branches: [main, feat/Sana-public, feat/Sana-public-for-NVLab]
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# if: ${{ github.repository == 'Efficient-Large-Model/Sana' }}
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.10
      - name: Test pre-commit hooks
        uses: pre-commit/action@v3.0.1
  test-inference:
    needs: pre-commit
    if: |
      github.event_name == 'workflow_dispatch' && github.event.inputs.run_tests == 'true' ||
      github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-tests')
    runs-on:
      - self-hosted
      - sana-runner
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.10
      - name: Set up the environment
        env:
          SANA_SLURM_ACCOUNT: ${{ secrets.SANA_SLURM_ACCOUNT }}
          SANA_SLURM_PARTITION: ${{ secrets.SANA_SLURM_PARTITION }}
        run: |
          bash environment_setup.sh
      - name: Run inference tests
        run: |
          sana-run --pty -m ci -J test-inference bash tests/bash/inference/test_inference.sh
  test-training-offline-vae:
    needs: pre-commit
    if: |
      github.event_name == 'workflow_dispatch' && github.event.inputs.run_tests == 'true' ||
      github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-tests')
    runs-on:
      - self-hosted
      - sana-runner
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.10
      - name: Set up the environment
        env:
          SANA_SLURM_ACCOUNT: ${{ secrets.SANA_SLURM_ACCOUNT }}
          SANA_SLURM_PARTITION: ${{ secrets.SANA_SLURM_PARTITION }}
        run: |
          bash environment_setup.sh
      - name: Run offline VAE training test
        run: |
          sana-run --pty -m ci -J test-training-offline-vae bash tests/bash/training/test_training_offline_vae.sh
  test-training-online-vae:
    needs: pre-commit
    if: |
      github.event_name == 'workflow_dispatch' && github.event.inputs.run_tests == 'true' ||
      github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-tests')
    runs-on:
      - self-hosted
      - sana-runner
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.10
      - name: Set up the environment
        env:
          SANA_SLURM_ACCOUNT: ${{ secrets.SANA_SLURM_ACCOUNT }}
          SANA_SLURM_PARTITION: ${{ secrets.SANA_SLURM_PARTITION }}
        run: |
          bash environment_setup.sh
      - name: Run online VAE training test
        run: |
          sana-run --pty -m ci -J test-training-online-vae bash tests/bash/training/test_training_online_vae.sh
  test-training-fsdp:
    needs: pre-commit
    if: |
      github.event_name == 'workflow_dispatch' && github.event.inputs.run_tests == 'true' ||
      github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-tests')
    runs-on:
      - self-hosted
      - sana-runner
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.10
      - name: Set up the environment
        env:
          SANA_SLURM_ACCOUNT: ${{ secrets.SANA_SLURM_ACCOUNT }}
          SANA_SLURM_PARTITION: ${{ secrets.SANA_SLURM_PARTITION }}
        run: |
          bash environment_setup.sh
      - name: Run FSDP training test
        run: |
          sana-run --pty -m ci -J test-training-fsdp bash tests/bash/training/test_training_fsdp.sh
  test-training-sprint:
    needs: pre-commit
    if: |
      github.event_name == 'workflow_dispatch' && github.event.inputs.run_tests == 'true' ||
      github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-tests')
    runs-on:
      - self-hosted
      - sana-runner
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.10
      - name: Set up the environment
        env:
          SANA_SLURM_ACCOUNT: ${{ secrets.SANA_SLURM_ACCOUNT }}
          SANA_SLURM_PARTITION: ${{ secrets.SANA_SLURM_PARTITION }}
        run: |
          bash environment_setup.sh
      - name: Run SANA-Sprint training test
        run: |
          sana-run --pty -m ci -J test-training-sprint bash tests/bash/training/test_training_sprint.sh
  remove-label:
    needs: [test-inference, test-training-offline-vae, test-training-online-vae, test-training-fsdp, test-training-sprint]
    if: |
      always() &&
      github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Remove run-tests label
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'run-tests'
            })

# tests-python:
#     needs: pre-commit
#     runs-on: self-hosted
#     steps:
#         - name: Check out Git repository
#           uses: actions/checkout@v4
#         - name: Set up Python
#           uses: actions/setup-python@v5
#           with:
#               python-version: 3.10.10
#         - name: Set up the environment
#           run: |
#               ./environment_setup.sh
#         - name: Run tests with Slurm
#           run: |
#               sana-run --pty -m ci -J tests-python pytest tests/python
